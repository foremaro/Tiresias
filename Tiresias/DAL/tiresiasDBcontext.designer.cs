#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tiresias.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tiresiasdb01")]
	public partial class tiresiasDBcontextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertauthor(author instance);
    partial void Updateauthor(author instance);
    partial void Deleteauthor(author instance);
    partial void Insertlanguage(language instance);
    partial void Updatelanguage(language instance);
    partial void Deletelanguage(language instance);
    partial void Insertmetadata(metadata instance);
    partial void Updatemetadata(metadata instance);
    partial void Deletemetadata(metadata instance);
    partial void Insertorganization(organization instance);
    partial void Updateorganization(organization instance);
    partial void Deleteorganization(organization instance);
    partial void Insertpost(post instance);
    partial void Updatepost(post instance);
    partial void Deletepost(post instance);
    partial void Insertrole(role instance);
    partial void Updaterole(role instance);
    partial void Deleterole(role instance);
    partial void Inserttranslator(translator instance);
    partial void Updatetranslator(translator instance);
    partial void Deletetranslator(translator instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertsubmission(submission instance);
    partial void Updatesubmission(submission instance);
    partial void Deletesubmission(submission instance);
    partial void Insertwork(work instance);
    partial void Updatework(work instance);
    partial void Deletework(work instance);
    #endregion
		
		public tiresiasDBcontextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["tiresiasdbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public tiresiasDBcontextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tiresiasDBcontextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tiresiasDBcontextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tiresiasDBcontextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<author> authors
		{
			get
			{
				return this.GetTable<author>();
			}
		}
		
		public System.Data.Linq.Table<language> languages
		{
			get
			{
				return this.GetTable<language>();
			}
		}
		
		public System.Data.Linq.Table<metadata> metadatas
		{
			get
			{
				return this.GetTable<metadata>();
			}
		}
		
		public System.Data.Linq.Table<organization> organizations
		{
			get
			{
				return this.GetTable<organization>();
			}
		}
		
		public System.Data.Linq.Table<post> posts
		{
			get
			{
				return this.GetTable<post>();
			}
		}
		
		public System.Data.Linq.Table<role> roles
		{
			get
			{
				return this.GetTable<role>();
			}
		}
		
		public System.Data.Linq.Table<translator> translators
		{
			get
			{
				return this.GetTable<translator>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<submission> submissions
		{
			get
			{
				return this.GetTable<submission>();
			}
		}
		
		public System.Data.Linq.Table<work> works
		{
			get
			{
				return this.GetTable<work>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.authors")]
	public partial class author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _author_id;
		
		private string _last_name;
		
		private string _first_name;
		
		private EntitySet<work> _works;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onauthor_idChanging(int value);
    partial void Onauthor_idChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    #endregion
		
		public author()
		{
			this._works = new EntitySet<work>(new Action<work>(this.attach_works), new Action<work>(this.detach_works));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int author_id
		{
			get
			{
				return this._author_id;
			}
			set
			{
				if ((this._author_id != value))
				{
					this.Onauthor_idChanging(value);
					this.SendPropertyChanging();
					this._author_id = value;
					this.SendPropertyChanged("author_id");
					this.Onauthor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="author_work", Storage="_works", ThisKey="author_id", OtherKey="author_id")]
		public EntitySet<work> works
		{
			get
			{
				return this._works;
			}
			set
			{
				this._works.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_works(work entity)
		{
			this.SendPropertyChanging();
			entity.author = this;
		}
		
		private void detach_works(work entity)
		{
			this.SendPropertyChanging();
			entity.author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.languages")]
	public partial class language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _language_id;
		
		private string _language_name;
		
		private EntitySet<work> _works;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlanguage_idChanging(int value);
    partial void Onlanguage_idChanged();
    partial void Onlanguage_nameChanging(string value);
    partial void Onlanguage_nameChanged();
    #endregion
		
		public language()
		{
			this._works = new EntitySet<work>(new Action<work>(this.attach_works), new Action<work>(this.detach_works));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int language_id
		{
			get
			{
				return this._language_id;
			}
			set
			{
				if ((this._language_id != value))
				{
					this.Onlanguage_idChanging(value);
					this.SendPropertyChanging();
					this._language_id = value;
					this.SendPropertyChanged("language_id");
					this.Onlanguage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string language_name
		{
			get
			{
				return this._language_name;
			}
			set
			{
				if ((this._language_name != value))
				{
					this.Onlanguage_nameChanging(value);
					this.SendPropertyChanging();
					this._language_name = value;
					this.SendPropertyChanged("language_name");
					this.Onlanguage_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="language_work", Storage="_works", ThisKey="language_id", OtherKey="language_id")]
		public EntitySet<work> works
		{
			get
			{
				return this._works;
			}
			set
			{
				this._works.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_works(work entity)
		{
			this.SendPropertyChanging();
			entity.language = this;
		}
		
		private void detach_works(work entity)
		{
			this.SendPropertyChanging();
			entity.language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.metadata")]
	public partial class metadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _metadata_id;
		
		private string _media_type;
		
		private string _doi;
		
		private string _isbn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmetadata_idChanging(int value);
    partial void Onmetadata_idChanged();
    partial void Onmedia_typeChanging(string value);
    partial void Onmedia_typeChanged();
    partial void OndoiChanging(string value);
    partial void OndoiChanged();
    partial void OnisbnChanging(string value);
    partial void OnisbnChanged();
    #endregion
		
		public metadata()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metadata_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int metadata_id
		{
			get
			{
				return this._metadata_id;
			}
			set
			{
				if ((this._metadata_id != value))
				{
					this.Onmetadata_idChanging(value);
					this.SendPropertyChanging();
					this._metadata_id = value;
					this.SendPropertyChanged("metadata_id");
					this.Onmetadata_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_media_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string media_type
		{
			get
			{
				return this._media_type;
			}
			set
			{
				if ((this._media_type != value))
				{
					this.Onmedia_typeChanging(value);
					this.SendPropertyChanging();
					this._media_type = value;
					this.SendPropertyChanged("media_type");
					this.Onmedia_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string doi
		{
			get
			{
				return this._doi;
			}
			set
			{
				if ((this._doi != value))
				{
					this.OndoiChanging(value);
					this.SendPropertyChanging();
					this._doi = value;
					this.SendPropertyChanged("doi");
					this.OndoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isbn", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string isbn
		{
			get
			{
				return this._isbn;
			}
			set
			{
				if ((this._isbn != value))
				{
					this.OnisbnChanging(value);
					this.SendPropertyChanging();
					this._isbn = value;
					this.SendPropertyChanged("isbn");
					this.OnisbnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.organizations")]
	public partial class organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _organization_id;
		
		private string _orginization_name;
		
		private string _orginization_abrev;
		
		private EntitySet<translator> _translators;
		
		private EntitySet<user> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorganization_idChanging(int value);
    partial void Onorganization_idChanged();
    partial void Onorginization_nameChanging(string value);
    partial void Onorginization_nameChanged();
    partial void Onorginization_abrevChanging(string value);
    partial void Onorginization_abrevChanged();
    #endregion
		
		public organization()
		{
			this._translators = new EntitySet<translator>(new Action<translator>(this.attach_translators), new Action<translator>(this.detach_translators));
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organization_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int organization_id
		{
			get
			{
				return this._organization_id;
			}
			set
			{
				if ((this._organization_id != value))
				{
					this.Onorganization_idChanging(value);
					this.SendPropertyChanging();
					this._organization_id = value;
					this.SendPropertyChanged("organization_id");
					this.Onorganization_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orginization_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string orginization_name
		{
			get
			{
				return this._orginization_name;
			}
			set
			{
				if ((this._orginization_name != value))
				{
					this.Onorginization_nameChanging(value);
					this.SendPropertyChanging();
					this._orginization_name = value;
					this.SendPropertyChanged("orginization_name");
					this.Onorginization_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orginization_abrev", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string orginization_abrev
		{
			get
			{
				return this._orginization_abrev;
			}
			set
			{
				if ((this._orginization_abrev != value))
				{
					this.Onorginization_abrevChanging(value);
					this.SendPropertyChanging();
					this._orginization_abrev = value;
					this.SendPropertyChanged("orginization_abrev");
					this.Onorginization_abrevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_translator", Storage="_translators", ThisKey="organization_id", OtherKey="organization_id")]
		public EntitySet<translator> translators
		{
			get
			{
				return this._translators;
			}
			set
			{
				this._translators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_user", Storage="_users", ThisKey="organization_id", OtherKey="organization_id")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_translators(translator entity)
		{
			this.SendPropertyChanging();
			entity.organization = this;
		}
		
		private void detach_translators(translator entity)
		{
			this.SendPropertyChanging();
			entity.organization = null;
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.organization = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.organization = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.posts")]
	public partial class post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _post_id;
		
		private string _post_type;
		
		private string _post_title;
		
		private System.DateTime _post_date;
		
		private string _post_content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpost_idChanging(int value);
    partial void Onpost_idChanged();
    partial void Onpost_typeChanging(string value);
    partial void Onpost_typeChanged();
    partial void Onpost_titleChanging(string value);
    partial void Onpost_titleChanged();
    partial void Onpost_dateChanging(System.DateTime value);
    partial void Onpost_dateChanged();
    partial void Onpost_contentChanging(string value);
    partial void Onpost_contentChanged();
    #endregion
		
		public post()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int post_id
		{
			get
			{
				return this._post_id;
			}
			set
			{
				if ((this._post_id != value))
				{
					this.Onpost_idChanging(value);
					this.SendPropertyChanging();
					this._post_id = value;
					this.SendPropertyChanged("post_id");
					this.Onpost_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string post_type
		{
			get
			{
				return this._post_type;
			}
			set
			{
				if ((this._post_type != value))
				{
					this.Onpost_typeChanging(value);
					this.SendPropertyChanging();
					this._post_type = value;
					this.SendPropertyChanged("post_type");
					this.Onpost_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string post_title
		{
			get
			{
				return this._post_title;
			}
			set
			{
				if ((this._post_title != value))
				{
					this.Onpost_titleChanging(value);
					this.SendPropertyChanging();
					this._post_title = value;
					this.SendPropertyChanged("post_title");
					this.Onpost_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_date", DbType="DateTime2 NOT NULL")]
		public System.DateTime post_date
		{
			get
			{
				return this._post_date;
			}
			set
			{
				if ((this._post_date != value))
				{
					this.Onpost_dateChanging(value);
					this.SendPropertyChanging();
					this._post_date = value;
					this.SendPropertyChanged("post_date");
					this.Onpost_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string post_content
		{
			get
			{
				return this._post_content;
			}
			set
			{
				if ((this._post_content != value))
				{
					this.Onpost_contentChanging(value);
					this.SendPropertyChanging();
					this._post_content = value;
					this.SendPropertyChanged("post_content");
					this.Onpost_contentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _role_id;
		
		private string _role_name;
		
		private EntitySet<user> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onrole_nameChanging(string value);
    partial void Onrole_nameChanged();
    #endregion
		
		public role()
		{
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string role_name
		{
			get
			{
				return this._role_name;
			}
			set
			{
				if ((this._role_name != value))
				{
					this.Onrole_nameChanging(value);
					this.SendPropertyChanging();
					this._role_name = value;
					this.SendPropertyChanged("role_name");
					this.Onrole_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_user", Storage="_users", ThisKey="role_id", OtherKey="role_id")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.role = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.translators")]
	public partial class translator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _translator_id;
		
		private string _translator_name;
		
		private int _organization_id;
		
		private EntitySet<work> _works;
		
		private EntityRef<organization> _organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontranslator_idChanging(int value);
    partial void Ontranslator_idChanged();
    partial void Ontranslator_nameChanging(string value);
    partial void Ontranslator_nameChanged();
    partial void Onorganization_idChanging(int value);
    partial void Onorganization_idChanged();
    #endregion
		
		public translator()
		{
			this._works = new EntitySet<work>(new Action<work>(this.attach_works), new Action<work>(this.detach_works));
			this._organization = default(EntityRef<organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_translator_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int translator_id
		{
			get
			{
				return this._translator_id;
			}
			set
			{
				if ((this._translator_id != value))
				{
					this.Ontranslator_idChanging(value);
					this.SendPropertyChanging();
					this._translator_id = value;
					this.SendPropertyChanged("translator_id");
					this.Ontranslator_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_translator_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string translator_name
		{
			get
			{
				return this._translator_name;
			}
			set
			{
				if ((this._translator_name != value))
				{
					this.Ontranslator_nameChanging(value);
					this.SendPropertyChanging();
					this._translator_name = value;
					this.SendPropertyChanged("translator_name");
					this.Ontranslator_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organization_id", DbType="Int NOT NULL")]
		public int organization_id
		{
			get
			{
				return this._organization_id;
			}
			set
			{
				if ((this._organization_id != value))
				{
					if (this._organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorganization_idChanging(value);
					this.SendPropertyChanging();
					this._organization_id = value;
					this.SendPropertyChanged("organization_id");
					this.Onorganization_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="translator_work", Storage="_works", ThisKey="translator_id", OtherKey="translator_id")]
		public EntitySet<work> works
		{
			get
			{
				return this._works;
			}
			set
			{
				this._works.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_translator", Storage="_organization", ThisKey="organization_id", OtherKey="organization_id", IsForeignKey=true)]
		public organization organization
		{
			get
			{
				return this._organization.Entity;
			}
			set
			{
				organization previousValue = this._organization.Entity;
				if (((previousValue != value) 
							|| (this._organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organization.Entity = null;
						previousValue.translators.Remove(this);
					}
					this._organization.Entity = value;
					if ((value != null))
					{
						value.translators.Add(this);
						this._organization_id = value.organization_id;
					}
					else
					{
						this._organization_id = default(int);
					}
					this.SendPropertyChanged("organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_works(work entity)
		{
			this.SendPropertyChanging();
			entity.translator = this;
		}
		
		private void detach_works(work entity)
		{
			this.SendPropertyChanging();
			entity.translator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _email;
		
		private string _password;
		
		private int _organization_id;
		
		private int _role_id;
		
		private EntitySet<submission> _submissions;
		
		private EntitySet<work> _works;
		
		private EntityRef<organization> _organization;
		
		private EntityRef<role> _role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onorganization_idChanging(int value);
    partial void Onorganization_idChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    #endregion
		
		public user()
		{
			this._submissions = new EntitySet<submission>(new Action<submission>(this.attach_submissions), new Action<submission>(this.detach_submissions));
			this._works = new EntitySet<work>(new Action<work>(this.attach_works), new Action<work>(this.detach_works));
			this._organization = default(EntityRef<organization>);
			this._role = default(EntityRef<role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organization_id", DbType="Int NOT NULL")]
		public int organization_id
		{
			get
			{
				return this._organization_id;
			}
			set
			{
				if ((this._organization_id != value))
				{
					if (this._organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorganization_idChanging(value);
					this.SendPropertyChanging();
					this._organization_id = value;
					this.SendPropertyChanged("organization_id");
					this.Onorganization_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_submission", Storage="_submissions", ThisKey="user_id", OtherKey="editor_id")]
		public EntitySet<submission> submissions
		{
			get
			{
				return this._submissions;
			}
			set
			{
				this._submissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_work", Storage="_works", ThisKey="user_id", OtherKey="user_entry_Id")]
		public EntitySet<work> works
		{
			get
			{
				return this._works;
			}
			set
			{
				this._works.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_user", Storage="_organization", ThisKey="organization_id", OtherKey="organization_id", IsForeignKey=true)]
		public organization organization
		{
			get
			{
				return this._organization.Entity;
			}
			set
			{
				organization previousValue = this._organization.Entity;
				if (((previousValue != value) 
							|| (this._organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organization.Entity = null;
						previousValue.users.Remove(this);
					}
					this._organization.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._organization_id = value.organization_id;
					}
					else
					{
						this._organization_id = default(int);
					}
					this.SendPropertyChanged("organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_user", Storage="_role", ThisKey="role_id", OtherKey="role_id", IsForeignKey=true)]
		public role role
		{
			get
			{
				return this._role.Entity;
			}
			set
			{
				role previousValue = this._role.Entity;
				if (((previousValue != value) 
							|| (this._role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role.Entity = null;
						previousValue.users.Remove(this);
					}
					this._role.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._role_id = value.role_id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_submissions(submission entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_submissions(submission entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_works(work entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_works(work entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submissions")]
	public partial class submission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _submission_id;
		
		private System.DateTime _submission_date;
		
		private string _submission_email;
		
		private int _work_id;
		
		private string _submission_content;
		
		private int _editor_id;
		
		private bool _approved;
		
		private System.Nullable<bool> _active;
		
		private EntityRef<user> _user;
		
		private EntityRef<work> _work;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsubmission_idChanging(int value);
    partial void Onsubmission_idChanged();
    partial void Onsubmission_dateChanging(System.DateTime value);
    partial void Onsubmission_dateChanged();
    partial void Onsubmission_emailChanging(string value);
    partial void Onsubmission_emailChanged();
    partial void Onwork_idChanging(int value);
    partial void Onwork_idChanged();
    partial void Onsubmission_contentChanging(string value);
    partial void Onsubmission_contentChanged();
    partial void Oneditor_idChanging(int value);
    partial void Oneditor_idChanged();
    partial void OnapprovedChanging(bool value);
    partial void OnapprovedChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public submission()
		{
			this._user = default(EntityRef<user>);
			this._work = default(EntityRef<work>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submission_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int submission_id
		{
			get
			{
				return this._submission_id;
			}
			set
			{
				if ((this._submission_id != value))
				{
					this.Onsubmission_idChanging(value);
					this.SendPropertyChanging();
					this._submission_id = value;
					this.SendPropertyChanged("submission_id");
					this.Onsubmission_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submission_date", DbType="DateTime2 NOT NULL")]
		public System.DateTime submission_date
		{
			get
			{
				return this._submission_date;
			}
			set
			{
				if ((this._submission_date != value))
				{
					this.Onsubmission_dateChanging(value);
					this.SendPropertyChanging();
					this._submission_date = value;
					this.SendPropertyChanged("submission_date");
					this.Onsubmission_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submission_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string submission_email
		{
			get
			{
				return this._submission_email;
			}
			set
			{
				if ((this._submission_email != value))
				{
					this.Onsubmission_emailChanging(value);
					this.SendPropertyChanging();
					this._submission_email = value;
					this.SendPropertyChanged("submission_email");
					this.Onsubmission_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_work_id", DbType="Int NOT NULL")]
		public int work_id
		{
			get
			{
				return this._work_id;
			}
			set
			{
				if ((this._work_id != value))
				{
					if (this._work.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwork_idChanging(value);
					this.SendPropertyChanging();
					this._work_id = value;
					this.SendPropertyChanged("work_id");
					this.Onwork_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submission_content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string submission_content
		{
			get
			{
				return this._submission_content;
			}
			set
			{
				if ((this._submission_content != value))
				{
					this.Onsubmission_contentChanging(value);
					this.SendPropertyChanging();
					this._submission_content = value;
					this.SendPropertyChanged("submission_content");
					this.Onsubmission_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_editor_id", DbType="Int NOT NULL")]
		public int editor_id
		{
			get
			{
				return this._editor_id;
			}
			set
			{
				if ((this._editor_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oneditor_idChanging(value);
					this.SendPropertyChanging();
					this._editor_id = value;
					this.SendPropertyChanged("editor_id");
					this.Oneditor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="Bit NOT NULL")]
		public bool approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_submission", Storage="_user", ThisKey="editor_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.submissions.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.submissions.Add(this);
						this._editor_id = value.user_id;
					}
					else
					{
						this._editor_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="work_submission", Storage="_work", ThisKey="work_id", OtherKey="work_id", IsForeignKey=true)]
		public work work
		{
			get
			{
				return this._work.Entity;
			}
			set
			{
				work previousValue = this._work.Entity;
				if (((previousValue != value) 
							|| (this._work.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._work.Entity = null;
						previousValue.submissions.Remove(this);
					}
					this._work.Entity = value;
					if ((value != null))
					{
						value.submissions.Add(this);
						this._work_id = value.work_id;
					}
					else
					{
						this._work_id = default(int);
					}
					this.SendPropertyChanged("work");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.works")]
	public partial class work : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _work_id;
		
		private string _title;
		
		private string _edition;
		
		private int _author_id;
		
		private int _language_id;
		
		private int _translator_id;
		
		private int _user_entry_Id;
		
		private int _metadata_id;
		
		private System.Nullable<bool> _active;
		
		private EntitySet<submission> _submissions;
		
		private EntityRef<author> _author;
		
		private EntityRef<language> _language;
		
		private EntityRef<translator> _translator;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onwork_idChanging(int value);
    partial void Onwork_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OneditionChanging(string value);
    partial void OneditionChanged();
    partial void Onauthor_idChanging(int value);
    partial void Onauthor_idChanged();
    partial void Onlanguage_idChanging(int value);
    partial void Onlanguage_idChanged();
    partial void Ontranslator_idChanging(int value);
    partial void Ontranslator_idChanged();
    partial void Onuser_entry_IdChanging(int value);
    partial void Onuser_entry_IdChanged();
    partial void Onmetadata_idChanging(int value);
    partial void Onmetadata_idChanged();
    partial void OnactiveChanging(System.Nullable<bool> value);
    partial void OnactiveChanged();
    #endregion
		
		public work()
		{
			this._submissions = new EntitySet<submission>(new Action<submission>(this.attach_submissions), new Action<submission>(this.detach_submissions));
			this._author = default(EntityRef<author>);
			this._language = default(EntityRef<language>);
			this._translator = default(EntityRef<translator>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_work_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int work_id
		{
			get
			{
				return this._work_id;
			}
			set
			{
				if ((this._work_id != value))
				{
					this.Onwork_idChanging(value);
					this.SendPropertyChanging();
					this._work_id = value;
					this.SendPropertyChanged("work_id");
					this.Onwork_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edition", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string edition
		{
			get
			{
				return this._edition;
			}
			set
			{
				if ((this._edition != value))
				{
					this.OneditionChanging(value);
					this.SendPropertyChanging();
					this._edition = value;
					this.SendPropertyChanged("edition");
					this.OneditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author_id", DbType="Int NOT NULL")]
		public int author_id
		{
			get
			{
				return this._author_id;
			}
			set
			{
				if ((this._author_id != value))
				{
					if (this._author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onauthor_idChanging(value);
					this.SendPropertyChanging();
					this._author_id = value;
					this.SendPropertyChanged("author_id");
					this.Onauthor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language_id", DbType="Int NOT NULL")]
		public int language_id
		{
			get
			{
				return this._language_id;
			}
			set
			{
				if ((this._language_id != value))
				{
					if (this._language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlanguage_idChanging(value);
					this.SendPropertyChanging();
					this._language_id = value;
					this.SendPropertyChanged("language_id");
					this.Onlanguage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_translator_id", DbType="Int NOT NULL")]
		public int translator_id
		{
			get
			{
				return this._translator_id;
			}
			set
			{
				if ((this._translator_id != value))
				{
					if (this._translator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontranslator_idChanging(value);
					this.SendPropertyChanging();
					this._translator_id = value;
					this.SendPropertyChanged("translator_id");
					this.Ontranslator_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_entry_Id", DbType="Int NOT NULL")]
		public int user_entry_Id
		{
			get
			{
				return this._user_entry_Id;
			}
			set
			{
				if ((this._user_entry_Id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_entry_IdChanging(value);
					this.SendPropertyChanging();
					this._user_entry_Id = value;
					this.SendPropertyChanged("user_entry_Id");
					this.Onuser_entry_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metadata_id", DbType="Int NOT NULL")]
		public int metadata_id
		{
			get
			{
				return this._metadata_id;
			}
			set
			{
				if ((this._metadata_id != value))
				{
					this.Onmetadata_idChanging(value);
					this.SendPropertyChanging();
					this._metadata_id = value;
					this.SendPropertyChanged("metadata_id");
					this.Onmetadata_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit")]
		public System.Nullable<bool> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="work_submission", Storage="_submissions", ThisKey="work_id", OtherKey="work_id")]
		public EntitySet<submission> submissions
		{
			get
			{
				return this._submissions;
			}
			set
			{
				this._submissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="author_work", Storage="_author", ThisKey="author_id", OtherKey="author_id", IsForeignKey=true)]
		public author author
		{
			get
			{
				return this._author.Entity;
			}
			set
			{
				author previousValue = this._author.Entity;
				if (((previousValue != value) 
							|| (this._author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._author.Entity = null;
						previousValue.works.Remove(this);
					}
					this._author.Entity = value;
					if ((value != null))
					{
						value.works.Add(this);
						this._author_id = value.author_id;
					}
					else
					{
						this._author_id = default(int);
					}
					this.SendPropertyChanged("author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="language_work", Storage="_language", ThisKey="language_id", OtherKey="language_id", IsForeignKey=true)]
		public language language
		{
			get
			{
				return this._language.Entity;
			}
			set
			{
				language previousValue = this._language.Entity;
				if (((previousValue != value) 
							|| (this._language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._language.Entity = null;
						previousValue.works.Remove(this);
					}
					this._language.Entity = value;
					if ((value != null))
					{
						value.works.Add(this);
						this._language_id = value.language_id;
					}
					else
					{
						this._language_id = default(int);
					}
					this.SendPropertyChanged("language");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="translator_work", Storage="_translator", ThisKey="translator_id", OtherKey="translator_id", IsForeignKey=true)]
		public translator translator
		{
			get
			{
				return this._translator.Entity;
			}
			set
			{
				translator previousValue = this._translator.Entity;
				if (((previousValue != value) 
							|| (this._translator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._translator.Entity = null;
						previousValue.works.Remove(this);
					}
					this._translator.Entity = value;
					if ((value != null))
					{
						value.works.Add(this);
						this._translator_id = value.translator_id;
					}
					else
					{
						this._translator_id = default(int);
					}
					this.SendPropertyChanged("translator");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_work", Storage="_user", ThisKey="user_entry_Id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.works.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.works.Add(this);
						this._user_entry_Id = value.user_id;
					}
					else
					{
						this._user_entry_Id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_submissions(submission entity)
		{
			this.SendPropertyChanging();
			entity.work = this;
		}
		
		private void detach_submissions(submission entity)
		{
			this.SendPropertyChanging();
			entity.work = null;
		}
	}
}
#pragma warning restore 1591
